# pre-commit is a tool that you run locally to perform a predefined set of tasks manually and/or automatically
# before git commits are made.
#
# We use pre-commit with the precommit.ci bot to check PRs.default_install_hook_types:
# In the future, we may enable code fixes automagically in PRs.

# You will want to install pre-commit to run locally
# Config reference: https://pre-commit.com/#pre-commit-configyaml---top-level
#
# To run on a PR, add a comment on the PR in GitHub with the text "pre-commit.ci run"
#
# Common tasks
# - Run on all files:   pre-commit run --all-files
# - Register git hooks: pre-commit install --install-hooks

ci:
  autofix_prs: false
  autofix_commit_msg: |
    '[pre-commit.ci ðŸ¤–] Apply code format tools to PR'
  autoupdate_schedule: weekly

repos:
  # Misc commit checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    # ref: https://github.com/pre-commit/pre-commit-hooks#hooks-available
    hooks:
      - id: end-of-file-fixer
      # Lint: Check for files with names that would conflict on a
      # case-insensitive filesystem like MacOS HFS+ or Windows FAT.
      - id: check-case-conflict
      - id: trailing-whitespace

  - repo: https://github.com/codespell-project/codespell
    rev: v2.2.6
    hooks:
      - id: codespell
        additional_dependencies:
          - tomli

  # Linting: Python code (see the file .flake8)
  - repo: https://github.com/PyCQA/flake8
    rev: "6.1.0"
    hooks:
      - id: flake8

  - repo: https://github.com/psf/black
    rev: 23.12.0
    hooks:
      - id: black

  - repo: https://github.com/PyCQA/isort
    rev: 5.13.2
    hooks:
      - id: isort
        files: \.py$
        args: ["--profile", "black", --line-length=120]
